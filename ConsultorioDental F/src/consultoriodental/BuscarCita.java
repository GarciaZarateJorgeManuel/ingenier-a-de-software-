/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package consultoriodental;

import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractListModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.event.ListDataListener;

/**
 *
 * @author Armando1
 */
public class BuscarCita extends javax.swing.JInternalFrame {

    /**
     * Creates new form BuscarCita
     */
    ArrayList<Object[]> datos;
    DefaultListModel model= new DefaultListModel();
    String url ="jdbc:mysql://localhost:3306/clinicadental?user=root&password=panda101";
    
    public BuscarCita() {
        initComponents();
           // Agregar_cita.ManejadorTecla mt = new Agregar_cita.ManejadorTecla();
        setTitle("Buscar Cita");
          FondoPanel fp  = new FondoPanel("/fondo/fondoverde.jpg");
        fp.setSize(794, 509);
        this.add(fp,BorderLayout.CENTER);
      //  this.setBounds(0, 0, 200, 200);
      // this.setLocked(true);
      iBuscarFecha.setVisible(false);
      iBuscar.setToolTipText("ingrese nombre o algun apellido a filtrar");
      iBuscarFecha.setToolTipText("ingrese una fecha valida");
      model.add(0, "NOMBRE     APELLIDO PAT     APELLIDO MAT");
      listaFiltro.setModel(model);
      
      this.pack();
        
    }
    
    public void agregarDatosList(ArrayList<Object[]> datos){
        String aux="";
        for (int i=0;i<datos.size();i++) {
            aux=(String) datos.get(i)[0]+"          "+datos.get(i)[1]+"        "+datos.get(i)[2];
            model.addElement(aux);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        seleccionarBusqueda = new javax.swing.JComboBox();
        bFiltrar = new javax.swing.JButton();
        iBuscar = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        oDetalles = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        iBuscarFecha = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaFiltro = new javax.swing.JList<>();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("Buscar por:");

        seleccionarBusqueda.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Fecha", "Nombre de Paciente" }));
        seleccionarBusqueda.setSelectedIndex(1);
        seleccionarBusqueda.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                seleccionarBusquedaItemStateChanged(evt);
            }
        });

        bFiltrar.setBackground(new java.awt.Color(168, 202, 235));
        bFiltrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        bFiltrar.setText("Filtrar");
        bFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bFiltrarActionPerformed(evt);
            }
        });

        oDetalles.setEditable(false);
        oDetalles.setColumns(20);
        oDetalles.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        oDetalles.setRows(5);
        jScrollPane2.setViewportView(oDetalles);

        jLabel2.setText("Coincidencias: ");

        iBuscarFecha.setMaxSelectableDate(new java.util.Date(1514790115000L));
        iBuscarFecha.setMinSelectableDate(new java.util.Date(-2208961289000L));

        listaFiltro.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listaFiltro.setToolTipText("selecione un nombre para ver mas detalles");
        listaFiltro.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaFiltroValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(listaFiltro);

        jLabel3.setText("Detalles busqueda:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(seleccionarBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iBuscarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(bFiltrar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(49, 49, 49))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(58, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(seleccionarBusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(iBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(iBuscarFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(bFiltrar)))
                        .addGap(20, 20, 20)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(56, 56, 56))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void seleccionarBusquedaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_seleccionarBusquedaItemStateChanged
        if(seleccionarBusqueda.getSelectedIndex()==1){
            iBuscarFecha.setDate(null);
            iBuscar.setVisible(true);   
            iBuscarFecha.setVisible(false); 
        }else{
            iBuscar.setText("");
            iBuscarFecha.setVisible(true); 
            iBuscar.setVisible(false);            
        }
    }//GEN-LAST:event_seleccionarBusquedaItemStateChanged

    private void clearResult(){
        model.removeAllElements();
        model.add(0, "NOMBRE     APELLIDO PAT     APELLIDO MAT");      
    }
    
    private void bFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bFiltrarActionPerformed
        if (!iBuscar.getText().isEmpty() || iBuscarFecha.getDate() != null) {
            datos = new ArrayList<>();
            String buscarpor = "";
            SimpleDateFormat fecha = new SimpleDateFormat("dd-MM-yyyy");
            if (seleccionarBusqueda.getSelectedIndex() == 1) {
                buscarpor = "Select * from paciente p inner join cita c on p.id_paciente=c.id_paciente "
                        + "where p.nombre like '%" + iBuscar.getText() + "%' or apellido_Paterno like '%" + iBuscar.getText() + "%' or apellido_materno like '%" + iBuscar.getText() + "%'";
            } else {
                buscarpor = "Select * from paciente p inner join cita c on p.id_paciente=c.id_paciente"
                        + " where c.fecha_cita = '" + fecha.format(iBuscarFecha.getDate()) + "'";
            }
            try {
                Class.forName("com.mysql.jdbc.Driver");
                Connection co = DriverManager.getConnection(url);

                Statement stm = co.createStatement();
                ResultSet rs = stm.executeQuery(buscarpor);

                clearResult();
                
                    while (rs.next()) {
                    
                        String dat[] = new String[8];
                        dat[0] = String.valueOf(rs.getString("nombre"));//nombre
                        dat[1] = String.valueOf(rs.getString("apellido_Paterno"));//apPaterno
                        dat[2] = String.valueOf(rs.getString("apellido_materno"));//apMaterno 
                        dat[3] = String.valueOf(rs.getString("genero"));//id_paciente
                        dat[4] = String.valueOf(rs.getString("telefono"));//nombre
                        dat[5] = String.valueOf(rs.getString("fecha_cita"));//apPaterno
                        dat[6] = String.valueOf(rs.getString("hora_cita"));//apMaterno 
                        dat[7] = String.valueOf(rs.getString("motivo"));//apMaterno 

                        datos.add(dat);
                    }
                    agregarDatosList(datos);                
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(BuscarCita.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(null,"ingrese un valor para efectuar la busqueda");
        }
    }//GEN-LAST:event_bFiltrarActionPerformed

    private void listaFiltroValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaFiltroValueChanged
        if (listaFiltro.getSelectedIndex() != 0) {
            int auxindex = listaFiltro.getSelectedIndex() - 1;

            String datosss = "";
            datosss += "NOMBRE: " + datos.get(auxindex)[0] + "\n";
            datosss += "APELLIDO PATERNO: " + datos.get(auxindex)[1] + "\n";
            datosss += "APELLIDO MATERNO: " + datos.get(auxindex)[2] + "\n";
            datosss += "GENERO: " + datos.get(auxindex)[3] + "\n";
            datosss += "TELEFONO: " + datos.get(auxindex)[4] + "\n";
            datosss += "FECHA DE LA CITA: " + datos.get(auxindex)[5] + "\n";
            datosss += "HORA DE LA CITA: " + datos.get(auxindex)[6] + "\n";
            datosss += "MOTIVO DE LA CITA: " + datos.get(auxindex)[7];
            
            oDetalles.setText(datosss);

        }
    }//GEN-LAST:event_listaFiltroValueChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bFiltrar;
    private javax.swing.JTextField iBuscar;
    private com.toedter.calendar.JDateChooser iBuscarFecha;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> listaFiltro;
    private javax.swing.JTextArea oDetalles;
    private javax.swing.JComboBox seleccionarBusqueda;
    // End of variables declaration//GEN-END:variables
}
